@page
@model ShoppingFantasy.Pages.SommaireModel
@using ShoppingFantasy.Utility
@using Newtonsoft.Json
@{
    ViewData["Title"] = "Sommaire";
}

<form method="post">
	<input type="hidden" id="order" value="@JsonConvert.SerializeObject(Model.ShoppingCartVM.OrderHeader.OrderTotal)" />
	<input type="hidden" id="shipping" value="@JsonConvert.SerializeObject(Model.Shipping)" />
	<br />
	<div class="container">
		<div class="card">
			<div class="card-header bg-dark text-light ml-0">
				<div class=" row container">
					<div class="col-6">
						<i class="fa fa-shopping-cart"></i> &nbsp;
					</div>
					<div class="col-6 text-end">
						<a asp-page="/Index" class="btn btn-outline-info btn-sm">Retour boutique</a>
					</div>
				</div>
			</div>
			<div class="card-body">
				<div class="container rounded p-2">
					<div class="row">
						<div class="col-12 col-lg-6 pb-4">
							<div class="row">
								<h4 class="d-flex justify-content-between align-items-center mb-3">
									<span class="text-info">Details pour l'envoi :</span>
								</h4>
							</div>
							<div class="row my-1">
								<div class="col-3">
									<label>Nom</label>
								</div>
								<div class="col-9">
									<input asp-for="ShoppingCartVM.OrderHeader.Name" class="form-control" />
									<span asp-validation-for="ShoppingCartVM.OrderHeader.Name" class="text-danger"></span>
								</div>
							</div>
							<div class="row my-1">
								<div class="col-3">
									<label>Prenom</label>
								</div>
								<div class="col-9">
									<input asp-for="ShoppingCartVM.OrderHeader.SurName" class="form-control" />
									<span asp-validation-for="ShoppingCartVM.OrderHeader.SurName" class="text-danger"></span>
								</div>
							</div>
							<div class="row my-1">
								<div class="col-3">
									<label>Telephone</label>
								</div>
								<div class="col-9">
									<input asp-for="ShoppingCartVM.OrderHeader.PhoneNumber" class="form-control" />
									<span asp-validation-for="ShoppingCartVM.OrderHeader.PhoneNumber" class="text-danger"></span>
								</div>
							</div>
							<div class="row my-1">
								<div class="col-3">
									<label>Addresse</label>
								</div>
								<div class="col-9">
									<input asp-for="ShoppingCartVM.OrderHeader.StreetAddress" class="form-control" />
									<span asp-validation-for="ShoppingCartVM.OrderHeader.StreetAddress" class="text-danger"></span>
								</div>
							</div>
							<div class="row my-1">
								<div class="col-3">
									<label>Complement d'addresse</label>
								</div>
								<div class="col-9">
									<input asp-for="ShoppingCartVM.OrderHeader.AddressComplement" class="form-control" />
									<span asp-validation-for="ShoppingCartVM.OrderHeader.AddressComplement" class="text-danger"></span>
								</div>
							</div>
							<div class="row my-1">
								<div class="col-3">
									<label>Ville</label>
								</div>
								<div class="col-9">
									<input asp-for="ShoppingCartVM.OrderHeader.City" class="form-control" />
									<span asp-validation-for="ShoppingCartVM.OrderHeader.City" class="text-danger"></span>
								</div>
							</div>
							<div class="row my-1">
								<div class="col-3">
									<label>Code Postal</label>
								</div>
								<div class="col-9">
									<input asp-for="ShoppingCartVM.OrderHeader.PostalCode" class="form-control" />
									<span asp-validation-for="ShoppingCartVM.OrderHeader.PostalCode" class="text-danger"></span>
								</div>
							</div>
							<div class="row my-1">
								<div class="col-3">
									<label>Mode de livraison</label>
								</div>
								<div class="col-9">
									<select asp-for="ShoppingCartVM.OrderHeader.Carrier" id="shipping-service-select" name="shipping-service-select" class="form-select" >
										<option selected disabled>---Service de Livraison---</option>
										@foreach (var shippingService in Model.Shipping)
										{
											<option value="@shippingService.Id">@shippingService.Name</option>
										}
									</select>
								</div>
							</div>
							<div class="row my-1" id="widget-zone">
								<!-- Widget -->
								<div class="col-12" id="Zone_Widget"></div>
								<!-- Parcelshop code -->
								<input id="ParcelShopCode" name="ParcelShopCode" hidden />
								<textarea id="relais" name="relais" hidden ></textarea>
							</div>
						</div>
						<div class="col-12 col-lg-5 offset-lg-1">
							<h4 class="d-flex justify-content-between align-items-center mb-3">
								<span class="text-info">Resumé de mon panier :</span>
							</h4>
							<ul class="list-group mb-3">
								@foreach (var details in Model.ShoppingCartVM.ListCart)
								{
									<li class="list-group-item d-flex justify-content-between">
										<div>
											<h6 class="my-0">@details.Product.Name</h6>
											<small class="text-muted">Quantité : <strong class="text-secondary">@details.Count</strong></small>
										</div>
										<span class="text-muted text-secondary">@((details.Price * details.Count).ToString("c")) </span>
									</li>
								}
								<li class="list-group-item d-flex justify-content-between bg-light">
									<span id="free-ship" class="badge bg-info text-light"></span>
								</li>
								<li class="list-group-item d-flex justify-content-between bg-light">
									<div class="input-group mb-3">
										<span class="input-group-text font-weight-bold text-info">Totale la Commande : </span>
										<input id="total-price"  class="form-control" aria-label="Amount (to the nearest euro)" readonly>
										<span class="input-group-text"><i class="bi bi-currency-euro"></i></span>
									</div>
								</li>
							</ul>
							<div class="accordion" id="accordionExample">
								<div class="accordion-item">
									<h2 class="accordion-header" id="headingOne">
										<button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
												<span class="text-info">Information de Livraison</span>
										</button>
									</h2>
									<div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
										<div class="accordion-body">
											<table class="table table-sm table-secondary table-hover ">
												<thead>
													<tr>
														<th>
															Nom
														</th>
														<th>
															Livraison Gratuite
														</th>
														<th>
															Prix de Livraison
														</th>
													</tr>
												</thead>
												<tbody>
													@foreach (var item in Model.Shipping)
													{
														<tr>
															<td class="text-dark">
																@item.Name
															</td>
															<td class="text-primary">
																@item.FreeShippingAt.ToString("c")
															</td>
															<td class="text-dark">
																@item.Price.ToString("c")
															</td>
														</tr>
													}
												</tbody>
											</table>
										</div>
									</div>
								</div>
							</div>
							
						</div>
					</div>
				</div>
				<div class="card-footer">
					<div class="row">
						<div class="col-12 col-md-8 pt-2">
							<p style="color:maroon; font-size:14px;">
								Estimation date du colis chez vous :
								@DateTime.Now.AddDays(3).ToShortDateString() - @DateTime.Now.AddDays(7).ToShortDateString()
							</p>
						</div>
						<div class="col-12 col-md-4">
							<button type="submit" id="submit-button" class="btn btn-success form-control">Payer</button>
						</div>
					</div>
				</div>
			</div>
		</div>
</form>


@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}

	<script defer>

			const orderTotal = JSON.parse(document.getElementById("order").value);
			const shipping = JSON.parse(document.getElementById("shipping").value);
			const shippingServiceSelect = document.getElementById("shipping-service-select");
			const totalPriceElement = document.getElementById("total-price");
			const freeShip = document.getElementById("free-ship");

			shippingServiceSelect.addEventListener("change", () => {
			const selectedShippingServiceId = shippingServiceSelect.value;
			const selectedShippingService = shipping.find(service => service.Id == selectedShippingServiceId);
			const free = getFreeOrNot(selectedShippingService.IsFree, orderTotal, selectedShippingService.FreeShippingAt)
			const total = getTotalPrice(free, selectedShippingService.Price,orderTotal)
			const totalPrice = parseFloat(orderTotal) + selectedShippingService.Price;
			totalPriceElement.value = total;
			freeShip.innerHTML = checkFree(free);
			});

			function checkFree(isFree){
				
				if(isFree){
					const textFree = 'livraison gratuite';
					return textFree;
				}
				else 
				{
				const textPaid = 'livraison payante';
				return textPaid;
				}
				
			}
			function getFreeOrNot(isFree,cartPrice, shippingFreePrice)
			{
				if(cartPrice >= shippingFreePrice){
					isFree = true;
				}
				else{
					isFree = false;
				}
				return isFree;
			}
			function getTotalPrice(isFree, shippingPrice, orderTotal){
				if(!isFree){
					 orderTotal = orderTotal + shippingPrice;
				}
				return orderTotal.toFixed(2);
			}
                                

	</script>
	<script>
		$(document).ready(function () {
			shippingServiceSelect.addEventListener("change", () => {
			if (shippingServiceSelect.value == 7) {
					$('#widget-zone').show();
			Responsive: true,
			// Charge le widget dans la DIV d'id "Zone_Widget" avec les paramètres indiqués
			// et renverra le Point Relais sélectionné par l'utilisateur dans le champs d'ID "Retour_Widget"
			$("#Zone_Widget").MR_ParcelShopPicker({
				Target: "#ParcelShopCode", // Selecteur JQuery de l'élément dans lequel sera renvoyé l'ID du Point Relais sélectionné (généralement un champ input hidden)
				TargetDisplayInfoPR : "#relais",
				Brand: "CC22O9MK", // Votre code client Mondial Relay
				Country: "FR", // Code ISO 2 lettres du pays utilisé pour la recherche,
				// Habiller le widget aux couleurs Mondial Relay (thème par défaut si ce paramètre n'est pas renseigné)
				Theme: "mondialrelay" // Mettre la valeur "inpost" (en minuscule) pour utiliser le thème graphique Inpost
			});
			}
				else {
					$('#widget-zone').hide();
				}
			})
			
		});
	</script>

}

